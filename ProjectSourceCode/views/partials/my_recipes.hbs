<div class="container-sm display-flex justify-content-center" style="margin-top: 20px; max-width: 50rem;">
  <div class="row p-2 display-flex justify-content-center">

    <h1>Recipes</h1>

    <form id="sortForm" class="mb-4">
      <label for="sort">Sort my recipes</label>
      <select id="sort" class="form-select w-auto d-inline-block mx-2">
        <option value="descTime">Newest First</option>
        <option value="ascTime">Oldest First</option>
        <option value="descDuration">Longest Duration</option>
        <option value="ascDuration">Shortest Duration</option>
        <option value="popularity">Most Liked</option>
      </select>
      <button type="submit" class="btn btn-secondary">Sort</button>
    </form>
  </div>
  <div class="row p-2 display-flex justify-content-center">
    <div id="recipeResults">
        {{#if recipes}}
      {{#each recipes}}
      <div class="row p-2 display-flex justify-content-center">
        <div class="card p-3 recipe-card" style="width: 50rem;">
          <a href="/recipes/{{recipe_id}}">
            <img src="{{image_url}}" class="card-img-top recipe-card-image" alt="{{title}}">
          </a>
          <div class="card-body">
            <div class="m-3">
              <div class="container-fluid">
                <div class="row gy-3">
                  <div class="col">
                    <h4 class="card-title">{{title}}</h4>
                    <p class="card-text">{{description}}</p>
                  </div>
                  <a class="col-md-auto" href="/users/{{created_by}}">
                    <div class="hstack gap-3">
                      <b>{{username}}</b>
                      <img src="{{profile_pic_url}}" class="recipe-profile-picture"
                        alt="{{username}}'s profile picture">
                    </div>
                  </a>
                </div>
              </div>
            </div>
            <hr />
            <div class="container">
              <div class="row">
                <div class="col">
                  <p>{{getCommaDelimitedCount ingredients}} Ingredients</p>
                  <p>Likes: {{like_count}}</p>
                  <a href="/recipes/{{recipe_id}}" class="btn btn-primary">View Recipe</a>
                  {{#if ../isOwner}}
                  <button
                    type="button"
                    class="btn btn-danger ms-2"
                    data-bs-toggle="modal"
                    data-bs-target="#staticBackdrop"
                    onclick="setRecipeID({{recipe_id}})"
                  >
                    Delete
                  </button>
                  {{/if}}

                </div>
                <div class="col">
                  <p>
                    Time:
                    {{#if duration.hours}}
                      {{#ifEquals duration.hours 1}}1 hour{{else}}{{duration.hours}} hours{{/ifEquals}}
                    {{/if}}
                    {{#if duration.minutes}}
                      {{#if duration.hours}} {{/if}}{{duration.minutes}} minutes
                    {{/if}}
                  </p>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
      {{/each}}
      {{else}}
        <div class="row p-2 display-flex justify-content-center text-center" style="width: 50rem;">
            <p>No recipes found.</p>
        </div>
    {{/if}}


    </div>
  </div>
</div>

<script>
  document.getElementById("sortForm").addEventListener("submit", async e => {
    e.preventDefault();

    var userId = {{#if recipes.[0]}}{{recipes.[0].created_by}}{{else}}0{{/if}};

    const sort_by = document.getElementById("sort").value;
    console.log("sort_by");
    try {
      console.log('here');
      const res = await fetch('/my_recipes', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ sort_by, userId })
      });
      console.log('this');
      if (!res.ok) throw new Error(res.statusText);

      const { recipesList, isOwner } = await res.json();
      renderRecipes(recipesList, isOwner);
    } catch (err) {
      console.error(err);
      document.getElementById("recipeResults").innerHTML =
        '<p style="color:red;">Error loading recipes.</p>';
    }
  });

  function renderRecipes(recipes, isOwner) {
    if (!recipes.length) {
      return document.getElementById("recipeResults")
        .innerHTML = '<p>No recipes found.</p>';
    }
    document.getElementById("recipeResults").innerHTML =
      recipes.map(r => `
        <div class="row p-2 display-flex justify-content-center">
          <div class="card p-3 recipe-card" style="width: 50rem;">
            <a href="/recipes/${r.recipe_id}">
              <img src="${r.image_url}" class="card-img-top recipe-card-image" alt="${r.title}">
            </a>
            <div class="card-body">
              <div class="m-3">
                <div class="container-fluid">
                  <div class="row gy-3">
                    <div class="col">
                      <h4 class="card-title">${r.title}</h4>
                      <p class="card-text">${r.description}</p>
                    </div>
                    <a class="col-md-auto" href="/users/${r.created_by}">
                      <div class="hstack gap-3">
                        <b>${r.username}</b>
                        <img src="${r.profile_pic_url}" class="recipe-profile-picture"
                          alt="${r.username}'s profile picture">
                      </div>
                    </a>
                  </div>
                </div>
              </div>
              <hr />
              <div class="container">
                <div class="row">
                  <div class="col">
                    <p>${r.ingredients.split(',').length} Ingredients</p>
                    <p>Likes: ${r.like_count}</p>
                    <a href="/recipes/${r.recipe_id}" class="btn btn-primary">View Recipe</a>

                    ${isOwner ? `
                      <!-- ↓ NEW DELETE BUTTON ↓ -->
                    <button
                      type="button"
                      class="btn btn-danger ms-2"
                      data-bs-toggle="modal"
                      data-bs-target="#staticBackdrop"
                      onclick="setRecipeID(${r.recipe_id})"
                    >
                      Delete
                    </button>
                    <!-- ↑ END DELETE BUTTON ↑ -->` : ''}
                    

                  </div>
                  <div class="col">
                    <p>
                      ${formatDuration(r.duration)}
                    </p>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      `).join('');
  }

  function formatDuration(interval) {
    if (!interval) return 'Duration not available';

    let h = 0, m = 0;
    if (interval.hours != null) h = +interval.hours;
    if (interval.minutes != null) m = +interval.minutes;
    if (interval.hours == null && typeof interval === 'number') {
      h = Math.floor(interval / 60); m = interval % 60;
    }
    return [h && (h + (h === 1 ? ' hour' : ' hours')),
      m && (m + ' minutes')]
      .filter(Boolean).join(' ');
  }
</script>

<div class="modal fade" id="staticBackdrop" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content">
      <div class="modal-header">
        <h1 class="modal-title fs-5" id="staticBackdropLabel">Delete Recipe</h1>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        Are you sure you want to delete this recipe? This cannot be undone.
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
        <button type="button" class="btn btn-danger" data-bs-dismiss="modal" onclick="deleteRecipe()">
          Delete <i class="bi bi-trash3-fill"></i>
        </button>
      </div>
    </div>
  </div>
</div>

<script>
  var recipeID = -1;

  function setRecipeID(recipeId) {
    recipeID = recipeId;
    console.log("Recipe ID set to: " + recipeID);
  }

  function deleteRecipe() {
    fetch(`/profile/delete`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ recipe_id: recipeID })
    })
      .then(response => {
        if (response.ok) {
          window.location.reload();
        } else {
          alert('Error deleting recipe');
        }
      })
      .catch(error => console.error('Error:', error));
  }
</script>
